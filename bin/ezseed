#!/usr/bin/env node

var pkg = require('../package')
  , program = require('../cli/helpers/mnomnom')(require('nomnom'), '')
  , config
  , p = require('path')
  , helper = require('../cli/helpers/promise')

var i18n = require('i18n').configure({
  locales:['en', 'fr'],
  defaultLocale: 'en',
  directory: p.resolve(__dirname, '..', 'locales')
})

//Detect first launch
try {
  config = require('../config/config')

  if(process.env.EZSEED_ENV == 'install') {
    helper.exit('npm install')(0)
  }

} catch(e) {
  var argv = require('minimist')(process.argv.slice(2));
  argv.new = true
  return require('../cli/install')(argv)
}

i18n = require('i18n')
i18n.setLocale(config.lang)

program.options({
  version: {
    flag: true,
    abbr: 'v',
    callback: function() {
       return pkg.version;
    }
  },
  quiet: {
    flag: true,
    abbr: 'q'
  }
})

program
  .commands('start stop restart')
  .callback(require('../cli/commands/daemon').ezseed)
  .options({
    rtorrent: {
      help: "rtorrent",
      abbr: "r",
      flag: true
    },
    transmission: {
      abbr: 't',
      help: "transmission",
      flag: true
    },
    user: {
      abbr: 'u',
      help: 'Specify user to restart (if not specified we restart all of them)'
    }
  })
  .help('the ezseed daemon (or specified daemon watcher, ezseed, rtorrent, transmission)')

program
  .commands('rtorrent transmission')
  .callback(require('../cli/daemon'))
  .options({
    command: {
      position: 1,
      choices: ['start', 'stop', 'restart'],
      // help: 'One of start|stop|restart',
      required: true
    },
    user: {
      abbr: 'u',
      help: 'Specify user to restart (if not specified we restart all of them)'
    }
  })

program
  .command('install')
  .options({
    client: {
      position: 1,
      help: "Client to install"
    },
    skipserver: {
      flag: true,
      help: "Skip server installation"
    },
    skipclient: {
      flag: true,
      help: "Skip client installation"
    },
    skipadmin: {
      flag: true,
      help: "Skip admin creation"
    },
    skipconfig: {
      flag: true,
      help: "Skip config creation"
    },
    force: {
      flag: true,
      help: "Force"
    }
  })
  .callback(function(opts) {
    //no client, install ezseed
    if(opts.client === undefined) {
      return require('../cli/install')(opts)
    } else if(opts.client == 'rtorrent' || opts.client == 'transmission'){
      //else install the required client
      require('../cli/commands/install').client(opts.client)()
      .then(helper.exit(i18n.__('Client installation')))
      .catch(helper.exit(i18n.__('Client installation')))
    } else {
      helper.exit(opts.client + i18n.__(' is not a valid entry for client, install'))(1)
    }
  })

program
  .command('config')
  .callback(function() {
    return require('../cli/install')({skipserver: true, skipadmin: true, skipclient: true})
  })

program.command('useradd')
  .options({
    username: {
      position: 1,
      help: "Username",
      required: true
    },
    client: {
      position: 2,
      help: "Client to install",
      choices: ['rtorrent', 'transmission']
    },
    password: {
      abbr: 'p',
      help: 'User password',
    },
    role: {
      abbr: 'r',
      choices: ['user', 'admin'],
    }
  })
  .callback(require('../cli/useradd'))

program.command('userdel')
  .option('username', {position: 2, help: "Username"})
  .callback(require('../cli/userdel'))

program.command('usermod')
  .options({
    username: {
      position: 1,
      required: true
    },
    key: {
      position: 2,
      choices: ['password', 'client', 'role'],
      required: true
    },
    value: {
      position: 3,
      required: true
    }
  })
  .callback(require('../cli/usermod'))

require('ezseed-database')(function() {
  program.parse()
})

/*
if no args, display menu
else parse args

commands :
Usage: ezseed [options] [command]

  Commands:

	autocheck if it's first start + make some configuration

    start|stop|restart [options] [name]		the ezseed daemon (or specified damon watcher, ezseed, rtorrent, transmission)
    rtorrent|transmission [options]     	<start|stop|restart> (-u user)

    install [options] [client] Install ezseed or the specified client
	update - same

	config

    useradd [options] <rutorrent|transmission|aucun> <username> Adds a user to ezseed and to the system using the specified client
    userdel <username>     /!\ All files will be deleted
	  passwd <username>

    backup                 Backup
    restore [options]      Restore backup config

    credits                Credits

    rtorrent [options] <start|stop|restart> stop rtorrent daemon(s)
    transmission [options] <start|stop|restart> start|stop|restart transmission daemon(s)
    reboot                 Restart all daemons
    deploy                 Deploy ezseed
    configure [options]    Configure

    -v verbose shell commands
    -q quiet

    *

*/
